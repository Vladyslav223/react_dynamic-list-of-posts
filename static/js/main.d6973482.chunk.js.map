{"version":3,"sources":["components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostsList/PostsList.js","App.js","index.js"],"names":["User","_ref","user","email","name","address","street","suite","city","zipcode","react_default","a","createElement","className","Comment","comment","body","charAt","toUpperCase","slice","CommentList","comments","map","components_Comment_Comment","key","id","Post","post","components_User_User","title","components_CommentList_CommentList","PostsList","posts","components_Post_Post","App","state","active","titleFiltering","userFiltering","loadDatas","_callee","_ref2","_ref3","usersResponse","postsResponse","commentsResponse","users","preparedPosts","regenerator_default","wrap","_context","prev","next","Promise","all","fetch","sent","Object","slicedToArray","json","_objectSpread","find","userId","filter","postId","_this","setState","stop","filterList","str","prevState","toConsumableArray","sort","b","localeCompare","_this2","this","_this$state","onClick","type","components_PostsList_PostsList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d6973482.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\n\nconst User = ({ user }) => {\n  const { email, name, address } = user;\n  const { street, suite, city, zipcode } = address;\n\n  return (\n    <div className=\"user\">\n      <div className=\"user__name\">\n        {name}\n      </div>\n      <div className=\"user__email\">\n        {email}\n      </div>\n      <div className=\"user__address\">\n        <div className=\"user__address-street\">\n          {street}\n        </div>\n        <div className=\"user__address-suite\">\n          {suite}\n        </div>\n        <div className=\"user__address-city\">\n          {city}\n        </div>\n        <div className=\"user__address-zipcode\">\n          {zipcode}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport './Comment.css';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"comment\">\n      <div className=\"comment__name\">\n        { name.charAt(0).toUpperCase() + name.slice(1) }\n      </div>\n      <div className=\"comment__body\">\n        { body.charAt(0).toUpperCase() + body.slice(1) }\n      </div>\n      <div className=\"comment__email\">\n        { email.charAt(0).toUpperCase() + email.slice(1) }\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport './CommentList.css';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    { comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))\n    }\n  </div>\n);\n\nexport default CommentList;\n","import React from 'react';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\nimport './Post.css';\n\nconst Post = ({ post }) => {\n  const { user, comments } = post;\n\n  return (\n    <div className=\"post\">\n      <User user={user} />\n      <h2 className=\"post__title\">\n        { post.title.charAt(0).toUpperCase() + post.title.slice(1) }\n      </h2>\n      <div className=\"post__body\">\n        { post.body.charAt(0).toUpperCase() + post.body.slice(1) }\n      </div>\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post';\nimport './PostsList.css';\n\nconst PostsList = ({ posts }) => (\n  <div className=\"post-list\">\n    { posts.map(post => (\n      <Post key={post.id} post={post} />\n    ))}\n  </div>\n);\n\nexport default PostsList;\n","/* eslint-disable react/no-unused-state */\nimport React from 'react';\n\nimport './App.css';\nimport PostsList from './components/PostsList/PostsList';\n\nclass App extends React.Component {\n  state = {\n    active: 0,\n    titleFiltering: 0,\n    userFiltering: 0,\n    posts: [],\n  }\n\n  loadDatas = async() => {\n    const [\n      usersResponse,\n      postsResponse,\n      commentsResponse,\n    ] = await Promise.all([\n      fetch('https://jsonplaceholder.typicode.com/users'),\n      fetch('https://jsonplaceholder.typicode.com/posts'),\n      fetch('https://jsonplaceholder.typicode.com/comments'),\n    ]);\n\n    const users = await usersResponse.json();\n    const posts = await postsResponse.json();\n    const comments = await commentsResponse.json();\n\n    const preparedPosts = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      posts: preparedPosts,\n      active: 1,\n    });\n  }\n\n  filterList = (str) => {\n    switch (str) {\n      case 'title':\n        return this.setState(prevState => (\n          prevState.titleFiltering === 0\n            ? {\n              posts: [...prevState.posts]\n                .sort((a, b) => (a.title.localeCompare(b.title))),\n              titleFiltering: 1,\n            }\n            : {\n              posts: [...prevState.posts]\n                .sort((a, b) => (b.title.localeCompare(a.title))),\n              titleFiltering: 0,\n            }\n        ));\n\n      case 'text':\n        return this.setState(prevState => (\n          prevState.userFiltering === 0\n            ? {\n              posts: [...prevState.posts]\n                .sort((a, b) => (a.body.localeCompare(b.body))),\n              userFiltering: 1,\n            }\n            : {\n              posts: [...prevState.posts]\n                .sort((a, b) => (b.body.localeCompare(a.body))),\n              userFiltering: 0,\n            }\n        ));\n\n      default:\n        return this.state.posts;\n    }\n  }\n\n  render() {\n    const { posts, active } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of posts</h1>\n        <div className={active === 1 ? 'button-back down' : 'button-back'}>\n          Loading...\n        </div>\n\n        <button\n          onClick={this.loadDatas}\n          className={active === 1 ? 'button-start down' : 'button-start'}\n          type=\"button\"\n        >\nLoad\n\n        </button>\n\n        {!!active && (\n          <button\n            type=\"button\"\n            className=\"sort sort-left\"\n            onClick={() => this.filterList('title')}\n          >\n            Title A-Z\n          </button>\n        )}\n\n        {!!active && (\n          <button\n            type=\"button\"\n            className=\"sort\"\n            onClick={() => this.filterList('text')}\n          >\n            Text A-Z\n          </button>\n        )}\n        <PostsList posts={posts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}